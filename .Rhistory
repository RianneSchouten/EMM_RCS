write_csv(inc_data, path = new_name)
}
# MCAR
props <- 0.51*c(0.1, 0.3, 0.5, 0.7, 0.9)
mech <- 'MCAR'
for(i in 1:length(props)){
inc_data <- data
myprop <- props[i]
w <- rep(1, length(inc_data))
r <- rbinom(n=sum(w), size=1, prob=myprop)
R <- rep(0, length(w))
counter = 0
for(j in 1:length(R)){
if(w[j] == 1){
counter = counter + 1
if(r[counter] == 1){
R[j] <- 1
}
}
}
print(sum(R)/length(w))
inc_data[R == 1, 'Hindsight'] <- NA
new_name <- paste0('C:/Users/20200059/Documents/Github/EMM_RCS/data_input/Brexit/MissingDataExperiments/Brexit_', eval(myprop), '_', eval(mech), '.sav')
write_csv(inc_data, path = new_name)
}
set.seed(202106092)
# MNAR
props <- c(0.1, 0.3, 0.5, 0.7, 0.9)
mech = 'MNAR'
for(i in 1:length(props)){
inc_data <- data
myprop <- props[i]
w <- as.numeric(inc_data$Hindsight == 'Wrong')
r <- rbinom(n=sum(w), size=1, prob=myprop)
R <- rep(0, length(w))
counter = 0
for(j in 1:length(R)){
if(w[j] == 1){
counter = counter + 1
if(r[counter] == 1){
R[j] <- 1
}
}
}
print(sum(R)/length(w))
inc_data[R == 1, 'Hindsight'] <- NA
new_name <- paste0('C:/Users/20200059/Documents/Github/EMM_RCS/data_input/Brexit/MissingDataExperiments/Brexit_', eval(myprop), '_', eval(mech), '.sav')
write_csv(inc_data, path = new_name)
}
# MAR
props <- c(0.1, 0.3, 0.5, 0.7, 0.9)
mech <- 'MAR'
for(i in 1:length(props)){
inc_data <- data
myprop <- props[i]
w <- as.numeric(inc_data$EURef2016 == 'Remain')
r <- rbinom(n=sum(w), size=1, prob=myprop)
R <- rep(0, length(w))
counter = 0
for(j in 1:length(R)){
if(w[j] == 1){
counter = counter + 1
if(r[counter] == 1){
R[j] <- 1
}
}
}
print(sum(R)/length(w))
inc_data[R == 1, 'Hindsight'] <- NA
new_name <- paste0('C:/Users/20200059/Documents/Github/EMM_RCS/data_input/Brexit/MissingDataExperiments/Brexit_', eval(myprop), '_', eval(mech), '.sav')
write_csv(inc_data, path = new_name)
}
# MCAR
props <- 0.51*c(0.1, 0.3, 0.5, 0.7, 0.9)
mech <- 'MCAR'
for(i in 1:length(props)){
inc_data <- data
myprop <- props[i]
w <- rep(1, length(inc_data))
r <- rbinom(n=sum(w), size=1, prob=myprop)
R <- rep(0, length(w))
counter = 0
for(j in 1:length(R)){
if(w[j] == 1){
counter = counter + 1
if(r[counter] == 1){
R[j] <- 1
}
}
}
print(sum(R)/length(w))
inc_data[R == 1, 'Hindsight'] <- NA
new_name <- paste0('C:/Users/20200059/Documents/Github/EMM_RCS/data_input/Brexit/MissingDataExperiments/Brexit_', eval(myprop), '_', eval(mech), '.sav')
write_csv(inc_data, path = new_name)
}
# MNAR
props <- c(0.1, 0.3, 0.5, 0.7, 0.9)
mech = 'MNAR'
for(i in 1:length(props)){
inc_data <- data
myprop <- props[i]
w <- as.numeric(inc_data$Hindsight == 'Wrong')
r <- rbinom(n=sum(w), size=1, prob=myprop)
R <- rep(0, length(w))
counter = 0
for(j in 1:length(R)){
if(w[j] == 1){
counter = counter + 1
if(r[counter] == 1){
R[j] <- 1
}
}
}
print(sum(R)/length(w))
inc_data[R == 1, 'Hindsight'] <- NA
new_name <- paste0('C:/Users/20200059/Documents/Github/EMM_RCS/data_input/Brexit/MissingDataExperiments/Brexit_', eval(myprop), '_', eval(mech), '.sav')
write_csv(inc_data, path = new_name)
}
# MAR
props <- c(0.1, 0.3, 0.5, 0.7, 0.9)
mech <- 'MAR'
for(i in 1:length(props)){
inc_data <- data
myprop <- props[i]
w <- as.numeric(inc_data$EURef2016 == 'Remain')
r <- rbinom(n=sum(w), size=1, prob=myprop)
R <- rep(0, length(w))
counter = 0
for(j in 1:length(R)){
if(w[j] == 1){
counter = counter + 1
if(r[counter] == 1){
R[j] <- 1
}
}
}
print(sum(R)/length(w))
inc_data[R == 1, 'Hindsight'] <- NA
new_name <- paste0('C:/Users/20200059/Documents/Github/EMM_RCS/data_input/Brexit/MissingDataExperiments/Brexit_', eval(myprop), '_', eval(mech), '.sav')
write_csv(inc_data, path = new_name)
}
# MCAR
props <- 0.51*c(0.1, 0.3, 0.5, 0.7, 0.9)
mech <- 'MCAR'
for(i in 1:length(props)){
inc_data <- data
myprop <- props[i]
w <- rep(1, length(inc_data))
r <- rbinom(n=sum(w), size=1, prob=myprop)
R <- rep(0, length(w))
counter = 0
for(j in 1:length(R)){
if(w[j] == 1){
counter = counter + 1
if(r[counter] == 1){
R[j] <- 1
}
}
}
print(sum(R)/length(w))
inc_data[R == 1, 'Hindsight'] <- NA
new_name <- paste0('C:/Users/20200059/Documents/Github/EMM_RCS/data_input/Brexit/MissingDataExperiments/Brexit_', eval(myprop), '_', eval(mech), '.sav')
write_csv(inc_data, path = new_name)
}
# MCAR
props <- 0.51*c(0.1, 0.3, 0.5, 0.7, 0.9)
mech <- 'MCAR'
for(i in 1:length(props)){
inc_data <- data
myprop <- props[i]
w <- rep(1, length(inc_data))
r <- rbinom(n=sum(w), size=1, prob=myprop)
R <- rep(0, length(w))
counter = 0
for(j in 1:length(R)){
if(w[j] == 1){
counter = counter + 1
if(r[counter] == 1){
R[j] <- 1
}
}
}
print(sum(R)/length(w))
inc_data[R == 1, 'Hindsight'] <- NA
new_name <- paste0('C:/Users/20200059/Documents/Github/EMM_RCS/data_input/Brexit/MissingDataExperiments/Brexit_', eval(myprop), '_', eval(mech), '.sav')
write_csv(inc_data, path = new_name)
}
library(readxl)
library(stringr)
library(tidyverse)
library(ggplot2)
library(mice)
library(reticulate)
library(gridExtra)
library(directlabels)
setwd("C:/Users/20200059/Documents/Github/EMM_RCS/")
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
extract_legend <- function(my_ggp) {
step1 <- ggplot_gtable(ggplot_build(my_ggp))
step2 <- which(sapply(step1$grobs, function(x) x$name) == "guide-box")
step3 <- step1$grobs[[step2]]
return(step3)
}
### import functions through python
source_python("import_subgroup.py")
# prevalence, max
nr_subgroups = 19.0
subgroup_numbers <- c(0.0:nr_subgroups)
pal <- c("#636363", gg_color_hue(nr_subgroups+1))
data_name <- 'HBSC_DNSSSU'
trend_name <- 'MPALC'
file_name <- "20210605_None_[8, 40, 3, 20]_[0.05, 1.0]_[False, 100]_[0.9, 80]_['prev', 'data', None, None, 'max', None]"
out <- import_subgroup_from_resultlist(data_name=data_name,
trend_name=trend_name,
file_name=file_name,
subgroup_numbers=subgroup_numbers)
file_name <- "20210605_None_[8, 40, 3, 20]_[0.05, 1.0]_[True, 100]_[0.9, 80]_['prev', 'data', None, None, 'max', None]"
out <- import_subgroup_from_resultlist(data_name=data_name,
trend_name=trend_name,
file_name=file_name,
subgroup_numbers=subgroup_numbers)
general_params <- out[[1]]
all_params <- out[[2]]
names(all_params)
names(general_params)
general_params_adapted <- general_params %>%
mutate(subgroup = rep(50, 9)) %>%
select(-min_size)
all_params_adapted <- all_params %>% select(-size) %>%
mutate(subgroup = as.numeric(subgroup) + 1)
data <- rbind(all_params_adapted, general_params_adapted) %>%
mutate(year = rep(seq(2003, 2019, 2), length(subgroup_numbers) + 1)) %>%
mutate(subgroup = reorder(subgroup, sort(as.numeric(subgroup))))
#sel <- data[data$subgroup %in% c(0,1:25), ]
sel <- data[data$subgroup %in% c(1,3,7,18,19,50), ]
sel <- data[data$subgroup %in% c(0,1:25), ]
#pal <- c("#636363", gg_color_hue(nr_subgroups+1))
trend_plot <- ggplot(sel, aes(x = year, y = prev, color = subgroup)) +
geom_point(size=0.8) +
geom_line(size=0.7) +
ggtitle(label = "") + #Prevalence of alcohol use among Dutch adolescents") +
scale_x_continuous(breaks=seq(2003, 2019, 2)) +
xlab("") +
ylab("") + #ylab("Prevalence") +
scale_color_manual(values = pal,
labels = c("1", "3", "7", "18", "19", "D"),
name = "") +
guides(color = guide_legend(nrow=1, override.aes = list(size = 0.7)),
shape = guide_legend(override.aes = list(size = 0.7))) +
theme_bw(base_size=7) +
theme(legend.position="top",
legend.justification="right",
#legend.direction = "vertical",
#plot.title = element_text(hjust = 0, vjust=-3),
legend.box.margin = margin(0,0,-0.2,0, "line"),
#axis.title.y = element_text(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.text  = element_text(size = 7),
legend.key.width = unit(0.2,"cm"),
legend.key.size = unit(0.2,"cm"),
plot.margin = unit(x = c(-2, 1, -2, -2), units = "mm"))
trend_plot
name <- paste('./data_output/HBSC_DNSSSU/MPALC/mpalc_prev_max.pdf', sep = "", collapse = NULL)
ggsave(name, width = 8, height = 5, units = "cm")
# mov avg prevalence slope, max
nr_subgroups = 19.0
subgroup_numbers <- c(0.0:nr_subgroups)
pal <- c("#636363", gg_color_hue(nr_subgroups+1))
data_name <- 'HBSC_DNSSSU'
trend_name <- 'MPALC'
file_name <- "20210605_None_[8, 40, 3, 20]_[0.05, 0.78]_[True, 100]_[0.9, 80]_['mov_prev_slope', 'data', None, None, 'max', None]"
out <- import_subgroup_from_resultlist(data_name=data_name,
trend_name=trend_name,
file_name=file_name,
subgroup_numbers=subgroup_numbers)
general_params <- out[[1]]
all_params <- out[[2]]
names(all_params)
names(general_params)
general_params_adapted <- general_params %>%
mutate(subgroup = rep(50, 9)) %>%
select(-min_size)
all_params_adapted <- all_params %>% select(-size) %>%
mutate(subgroup = as.numeric(subgroup) + 1)
data <- rbind(all_params_adapted, general_params_adapted) %>%
filter(meting != 2019) %>%
#mutate(year = rep(seq(2003, 2019, 2), length(subgroup_numbers) + 1)) %>%
#mutate(year = rep(c('03/05', '05/07', '07/09', '09/11', '11/13', '13/15', '15/17', '17/19'), length(subgroup_numbers) + 1)) %>%
mutate(year = rep(c(1:8), length(subgroup_numbers) + 1)) %>%
mutate(subgroup = reorder(subgroup, sort(as.numeric(subgroup))))
#sel <- data[data$subgroup %in% c(0,1:25), ]
sel <- data[data$subgroup %in% c(1,6,11,18,50), ]
pal = c("#fdb462", "#bebada", "#b3de69", "#fccde5", "#636363")
#pal <- c("#636363", gg_color_hue(nr_subgroups+1))
trend_plot <- ggplot(sel, aes(x = year, y = mov_prev, color = subgroup)) +
geom_point(size=0.8) +
geom_line(size=0.7) +
ggtitle(label = "") +
xlab("") +
ylab("") +
scale_x_continuous(breaks=c(1:8),
labels=c('03/05', '05/07', '07/09', '09/11', '11/13', '13/15', '15/17', '17/19')) +
scale_color_manual(values = pal,
labels = c("1", "3", "6", "11", "16", "18", "D"),
name = "") +
guides(color = guide_legend(nrow=1, override.aes = list(size = 0.7)),
shape = guide_legend(override.aes = list(size = 0.7))) +
theme_bw(base_size=7) +
theme(legend.position="top",
legend.justification="right",
#legend.direction = "vertical",
#plot.title = element_text(hjust = 0, vjust=-3),
legend.box.margin = margin(0,0,-0.2,0, "line"),
#axis.title.y = element_text(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.text  = element_text(size = 7),
legend.key.width = unit(0.2,"cm"),
legend.key.size = unit(0.2,"cm"),
plot.margin = unit(x = c(-2, 1, -2, -2), units = "mm"))
trend_plot
name <- paste('./data_output/HBSC_DNSSSU/MPALC/mpalc_mov_avg_slope_max.pdf', sep = "", collapse = NULL)
ggsave(name, width = 8, height = 5, units = "cm")
# mov avg prevalence slope, count
nr_subgroups = 19.0
subgroup_numbers <- c(0.0:nr_subgroups)
pal <- c("#636363", gg_color_hue(nr_subgroups+1))
data_name <- 'HBSC_DNSSSU'
trend_name <- 'MPALC'
file_name <- "20210605_None_[8, 40, 3, 20]_[0.05, 0.78]_[True, 100]_[0.9, 80]_['mov_prev_slope', 'value', 0.0, False, 'count', 0.01]"
out <- import_subgroup_from_resultlist(data_name=data_name,
trend_name=trend_name,
file_name=file_name,
subgroup_numbers=subgroup_numbers)
general_params <- out[[1]]
all_params <- out[[2]]
names(all_params)
names(general_params)
general_params_adapted <- general_params %>%
mutate(subgroup = rep(50, 9)) %>%
select(-min_size)
all_params_adapted <- all_params %>% select(-size) %>%
mutate(subgroup = as.numeric(subgroup) + 1)
data <- rbind(all_params_adapted, general_params_adapted) %>%
filter(meting != 2019) %>%
#mutate(year = rep(seq(2003, 2019, 2), length(subgroup_numbers) + 1)) %>%
#mutate(year = rep(c('03/05', '05/07', '07/09', '09/11', '11/13', '13/15', '15/17', '17/19'), length(subgroup_numbers) + 1)) %>%
mutate(year = rep(c(1:8), length(subgroup_numbers) + 1)) %>%
mutate(subgroup = reorder(subgroup, sort(as.numeric(subgroup))))
pal = c("#fdb462", "#80b1d3", "#b3de69", "#fccde5", "#636363")
#pal <- c("#636363", gg_color_hue(nr_subgroups+1))
trend_plot <- ggplot(sel, aes(x = year, y = mov_prev, color = subgroup)) +
geom_point(size=0.8) +
geom_line(size=0.7) +
ggtitle(label = "") +
xlab("") +
ylab("") +
scale_x_continuous(breaks=c(1:8),
labels=c('03/05', '05/07', '07/09', '09/11', '11/13', '13/15', '15/17', '17/19')) +
scale_color_manual(values = pal,
labels = c("1", "2", "13", "15", "17", "18", "D"),
name = "") +
guides(color = guide_legend(nrow=1, override.aes = list(size = 0.7)),
shape = guide_legend(override.aes = list(size = 0.7))) +
theme_bw(base_size=7) +
theme(legend.position="top",
legend.justification="right",
#legend.direction = "vertical",
#plot.title = element_text(hjust = 0, vjust=-3),
legend.box.margin = margin(0,0,-0.2,0, "line"),
#axis.title.y = element_text(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.text  = element_text(size = 7),
legend.key.width = unit(0.2,"cm"),
legend.key.size = unit(0.2,"cm"),
plot.margin = unit(x = c(-2, 1, -2, -2), units = "mm"))
trend_plot
name <- paste('./data_output/HBSC_DNSSSU/MPALC/mpalc_mov_avg_slope_count.pdf', sep = "", collapse = NULL)
ggsave(name, width = 8, height = 5, units = "cm")
# mov avg prevalence slope, max
nr_subgroups = 19.0
subgroup_numbers <- c(0.0:nr_subgroups)
pal <- c("#636363", gg_color_hue(nr_subgroups+1))
data_name <- 'HBSC_DNSSSU'
trend_name <- 'MPALC'
file_name <- "20210605_None_[8, 40, 3, 20]_[0.05, 0.78]_[True, 100]_[0.9, 80]_['mov_prev_slope', 'data', None, None, 'max', None]"
out <- import_subgroup_from_resultlist(data_name=data_name,
trend_name=trend_name,
file_name=file_name,
subgroup_numbers=subgroup_numbers)
general_params <- out[[1]]
all_params <- out[[2]]
names(all_params)
names(general_params)
general_params_adapted <- general_params %>%
mutate(subgroup = rep(50, 9)) %>%
select(-min_size)
all_params_adapted <- all_params %>% select(-size) %>%
mutate(subgroup = as.numeric(subgroup) + 1)
data <- rbind(all_params_adapted, general_params_adapted) %>%
filter(meting != 2019) %>%
#mutate(year = rep(seq(2003, 2019, 2), length(subgroup_numbers) + 1)) %>%
#mutate(year = rep(c('03/05', '05/07', '07/09', '09/11', '11/13', '13/15', '15/17', '17/19'), length(subgroup_numbers) + 1)) %>%
mutate(year = rep(c(1:8), length(subgroup_numbers) + 1)) %>%
mutate(subgroup = reorder(subgroup, sort(as.numeric(subgroup))))
#sel <- data[data$subgroup %in% c(0,1:25), ]
sel <- data[data$subgroup %in% c(1,6,11,18,50), ]
pal = c("#fdb462", "#bebada", "#b3de69", "#fccde5", "#636363")
#pal <- c("#636363", gg_color_hue(nr_subgroups+1))
trend_plot <- ggplot(sel, aes(x = year, y = mov_prev, color = subgroup)) +
geom_point(size=0.8) +
geom_line(size=0.7) +
ggtitle(label = "") +
xlab("") +
ylab("") +
scale_x_continuous(breaks=c(1:8),
labels=c('03/05', '05/07', '07/09', '09/11', '11/13', '13/15', '15/17', '17/19')) +
scale_color_manual(values = pal,
labels = c("1", "6", "11", "18", "D"),
name = "") +
guides(color = guide_legend(nrow=1, override.aes = list(size = 0.7)),
shape = guide_legend(override.aes = list(size = 0.7))) +
theme_bw(base_size=7) +
theme(legend.position="top",
legend.justification="right",
#legend.direction = "vertical",
#plot.title = element_text(hjust = 0, vjust=-3),
legend.box.margin = margin(0,0,-0.2,0, "line"),
#axis.title.y = element_text(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.text  = element_text(size = 7),
legend.key.width = unit(0.2,"cm"),
legend.key.size = unit(0.2,"cm"),
plot.margin = unit(x = c(-2, 1, -2, -2), units = "mm"))
trend_plot
name <- paste('./data_output/HBSC_DNSSSU/MPALC/mpalc_mov_avg_slope_max.pdf', sep = "", collapse = NULL)
ggsave(name, width = 8, height = 5, units = "cm")
# mov avg prevalence slope, count
nr_subgroups = 19.0
subgroup_numbers <- c(0.0:nr_subgroups)
pal <- c("#636363", gg_color_hue(nr_subgroups+1))
data_name <- 'HBSC_DNSSSU'
trend_name <- 'MPALC'
file_name <- "20210605_None_[8, 40, 3, 20]_[0.05, 0.78]_[True, 100]_[0.9, 80]_['mov_prev_slope', 'value', 0.0, False, 'count', 0.01]"
out <- import_subgroup_from_resultlist(data_name=data_name,
trend_name=trend_name,
file_name=file_name,
subgroup_numbers=subgroup_numbers)
general_params <- out[[1]]
all_params <- out[[2]]
names(all_params)
names(general_params)
general_params_adapted <- general_params %>%
mutate(subgroup = rep(50, 9)) %>%
select(-min_size)
all_params_adapted <- all_params %>% select(-size) %>%
mutate(subgroup = as.numeric(subgroup) + 1)
data <- rbind(all_params_adapted, general_params_adapted) %>%
filter(meting != 2019) %>%
#mutate(year = rep(seq(2003, 2019, 2), length(subgroup_numbers) + 1)) %>%
#mutate(year = rep(c('03/05', '05/07', '07/09', '09/11', '11/13', '13/15', '15/17', '17/19'), length(subgroup_numbers) + 1)) %>%
mutate(year = rep(c(1:8), length(subgroup_numbers) + 1)) %>%
mutate(subgroup = reorder(subgroup, sort(as.numeric(subgroup))))
#sel <- data[data$subgroup %in% c(0,1:25), ]
sel <- data[data$subgroup %in% c(1,13,15,18,50), ]
pal = c("#fdb462", "#80b1d3", "#b3de69", "#fccde5", "#636363")
#pal <- c("#636363", gg_color_hue(nr_subgroups+1))
trend_plot <- ggplot(sel, aes(x = year, y = mov_prev, color = subgroup)) +
geom_point(size=0.8) +
geom_line(size=0.7) +
ggtitle(label = "") +
xlab("") +
ylab("") +
scale_x_continuous(breaks=c(1:8),
labels=c('03/05', '05/07', '07/09', '09/11', '11/13', '13/15', '15/17', '17/19')) +
scale_color_manual(values = pal,
labels = c("1", "13", "15", "18", "D"),
name = "") +
guides(color = guide_legend(nrow=1, override.aes = list(size = 0.7)),
shape = guide_legend(override.aes = list(size = 0.7))) +
theme_bw(base_size=7) +
theme(legend.position="top",
legend.justification="right",
#legend.direction = "vertical",
#plot.title = element_text(hjust = 0, vjust=-3),
legend.box.margin = margin(0,0,-0.2,0, "line"),
#axis.title.y = element_text(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.text  = element_text(size = 7),
legend.key.width = unit(0.2,"cm"),
legend.key.size = unit(0.2,"cm"),
plot.margin = unit(x = c(-2, 1, -2, -2), units = "mm"))
trend_plot
name <- paste('./data_output/HBSC_DNSSSU/MPALC/mpalc_mov_avg_slope_count.pdf', sep = "", collapse = NULL)
ggsave(name, width = 8, height = 5, units = "cm")
