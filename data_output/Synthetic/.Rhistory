panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(color=NA) +
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
theme_bw(base_size=7) +
#ylab("") +
ylab("quality value") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
name <- paste('./syntheticplot.pdf', sep = "", collapse = NULL)
ggsave(name, width = 8, height = 10, units = "cm")
plot
name <- paste('./syntheticplot.pdf', sep = "", collapse = NULL)
ggsave(name, width = 8, height = 6, units = "cm")
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(color=NA) +
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
#theme_bw(base_size=7) +
#ylab("") +
ylab("quality value") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(color=NA)
data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot()
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot() +
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
theme_bw(base_size=7) +
#ylab("") +
ylab("quality value") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
?geom_boxplot
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(outlier.color=NA) +
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
theme_bw(base_size=7) +
#ylab("") +
ylab("quality value") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
?geom_boxplot
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(outlier.color=NA,notchwidth=0.2) +
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
theme_bw(base_size=7) +
#ylab("") +
ylab("quality value") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(outlier.color=NA,notchwidth=0.2) +
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
theme_bw(base_size=7) +
#ylab("") +
ylab("quality value of the true subgroup") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
name <- paste('./syntheticplot.pdf', sep = "", collapse = NULL)
ggsave(name, width = 8, height = 6, units = "cm")
vignette("ggplot2-specs")
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(outlier.color=NA,size=10) +
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
theme_bw(base_size=7) +
#ylab("") +
ylab("quality value of the true subgroup") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(outlier.color=NA,size=1) +
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
theme_bw(base_size=7) +
#ylab("") +
ylab("quality value of the true subgroup") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(outlier.color=NA,size=0.1) +
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
theme_bw(base_size=7) +
#ylab("") +
ylab("quality value of the true subgroup") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(outlier.color=NA,size=NA)+
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
theme_bw(base_size=7) +
#ylab("") +
ylab("quality value of the true subgroup") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(outlier.color=NA,size=0.1)+
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
theme_bw(base_size=7) +
#ylab("") +
ylab("quality value of the true subgroup") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(outlier.color=NA,size=0.01)+
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
theme_bw(base_size=7) +
#ylab("") +
ylab("quality value of the true subgroup") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
plot <- data %>%
#filter(quality_value != 0) %>%
filter(d != 1) %>%
filter(distance != 2) %>%
mutate(quality_value = ifelse(quality_value == 0, NA, quality_value)) %>%
mutate(group = as.character(interaction(distance,sd,d, sep="."))) %>%
arrange(desc(group)) %>%
mutate(group = fct_reorder(as.factor(group), desc(group))) %>%
ggplot(aes(y=quality_value, x=as.factor(group), fill=as.factor(d))) +
geom_boxplot(outlier.color=NA,size=0.1)+
#geom_violin(trim=TRUE,color = NA) +
coord_flip() +
theme_bw(base_size=7) +
#ylab("") +
ylab("quality value of the true subgroup") +
#ggtitle("Quality value of subgroup for varying distance, sd and size") +
scale_y_continuous(breaks=seq(0,45,by=5))+
theme(axis.title.y=element_blank(),
#axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size=7),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
#panel.border = element_blank(),
panel.background = element_blank()) +
guides(fill=FALSE) +
geom_hline(yintercept=13.6)
plot
name <- paste('./syntheticplot.pdf', sep = "", collapse = NULL)
ggsave(name, width = 8, height = 6, units = "cm")
data %>%
filter(quality_value == 0) %>%
group_by(distance, sd, d) %>%
summarize(c = n())
data %>%
mutate(qv_yes = ifelse(quality_value != 0, 1, 0)) %>%
#filter(quality_value != 0) %>%
group_by(qv_yes, distance, sd, d) %>%
summarize(medq = median(quality_value),
medr = median(rank),
minq = min(quality_value),
maxq = max(quality_value))
data %>%
mutate(qv_yes = ifelse(quality_value != 0, 1, 0)) %>%
#filter(quality_value != 0) %>%
group_by(qv_yes, distance, sd, d) %>%
summarize(n = count(),
medq = median(quality_value),
medr = median(rank),
minq = min(quality_value),
maxq = max(quality_value))
data %>%
mutate(qv_yes = ifelse(quality_value != 0, 1, 0)) %>%
#filter(quality_value != 0) %>%
group_by(qv_yes, distance, sd, d) %>%
summarize(n = n(),
medq = median(quality_value),
medr = median(rank),
minq = min(quality_value),
maxq = max(quality_value))
data %>%
mutate(qv_yes = ifelse(quality_value != 0, 1, 0)) %>%
#filter(quality_value != 0) %>%
group_by(distance, sd, d, qv_yes) %>%
summarize(n = n(),
medq = median(quality_value),
medr = median(rank),
minq = min(quality_value),
maxq = max(quality_value))
sum <- data %>%
mutate(qv_yes = ifelse(quality_value != 0, 1, 0)) %>%
#filter(quality_value != 0) %>%
group_by(distance, sd, d, qv_yes) %>%
summarize(n = n(),
medq = median(quality_value),
medr = median(rank),
minq = min(quality_value),
maxq = max(quality_value))
View(sum)
28/50
sqrt(5000)
1 / sqrt(5000)
1 / sqrt(500)
1/0.0447
1 / (1 / sqrt(250))
1 / (1 / sqrt(125))
1 / (1 / sqrt(67.5))
1 / (1 / sqrt(500))
1 / (2 / sqrt(500))
1 / (2 / sqrt(250))
1 / (2 / sqrt(125))
1 / (2 / sqrt(67.5))
1 / sqrt(500)
1 / 0.042
1 / sqrt(250)
1 / 0.065
0.5 / 0.042
0.75 / 0.065
33/50
47/50
3/50
45/50
26/50
27/50
34/50
38/50
24/50
33/50
32/50
49/50
47/50
31/50
